package edu.hm.ba.kongo.shop.shoppingcart.service.gen.domain;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.validation.constraints.DecimalMin;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;	
import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Embedded;
import javax.persistence.ElementCollection;
import javax.persistence.ManyToMany;
import javax.persistence.OrderColumn;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import org.hibernate.search.annotations.Indexed;
import de.muenchen.service.BaseEntity;
import de.muenchen.auditing.MUCAudited;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * This class represents a Cart_.
 * <p>
 * Only oid and reference will be stored in the database.
 * The entity's content will be loaded according to the reference variable.
 * </p>
 */
@Entity
@Indexed
@Table(name = "Cart")
public class Cart_ extends BaseEntity {
	
	// ========= //
	// Variables //
	// ========= //
	
	@OrderColumn(name="order_index")
	@JoinTable(name = "Cart_Items", joinColumns = { @JoinColumn(name = "cart_oid")})
	@ElementCollection
	@Embedded
	@AttributeOverrides({
		@AttributeOverride(name="product", column=@Column(name="items_product")),
		@AttributeOverride(name="quantity", column=@Column(name="items_quantity"))
	})	
	@NotNull
	@Size(min = 1)
	private java.util.Set<CartItem_> items = new java.util.LinkedHashSet<>();
	
	
	@Column(name="userID")
	@NotNull
	@Size(max=36)
	private String userID;
	
	
	@Column(name="totalPrice")
	@NotNull
	@DecimalMin("0.0")
	private BigDecimal totalPrice;
	
	
	/**
	 * Default Constructor for Cart.
	 */
	public Cart_() {}
	
	// =================== //
	// Getters and Setters //
	// =================== //
	public java.util.Set<CartItem_> getItems(){
		return items;
	}
	
	public void setItems(java.util.Set<CartItem_> items){
		this.items = items;
	}
	
	
	public String getUserID(){
		return userID;
	}
	
	public void setUserID(String userID){
		this.userID = userID;
	}
	
	
	public BigDecimal getTotalPrice(){
		return totalPrice;
	}
	
	public void setTotalPrice(BigDecimal totalPrice){
		this.totalPrice = totalPrice;
	}
	
	
	@Override
	public boolean equals(Object other) {
		if (other == null)
			return false;
		if (this == other)
			return true;
		if (!(other.getClass() == Cart_.class))
			return false;
		if (!super.equals(other))
			return false;
		Cart_ cart = (Cart_) other;
		if (getItems() != null ? !getItems().equals(cart.getItems()) : cart.getItems() != null)
			return false;
		if (getUserID() != null ? !getUserID().equals(cart.getUserID()) : cart.getUserID() != null)
			return false;
		if (getTotalPrice() != cart.getTotalPrice())
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		int result = super.hashCode();
		result = 31 * result + (getItems() != null ? getItems().hashCode() : 0);
		result = 31 * result + (getUserID() != null ? getUserID().hashCode() : 0);
		result = 31 * result + (getTotalPrice() != null ? getTotalPrice().hashCode() : 0);
		return result;
	}

	/**
	 * Returns a String representation for this Cart.
	 * The form is:
	 * <EntityName>
	 * <attribute1_Type> <attribute1_name>: <attribute1_value>
	 * <attribute2_Type> <attribute2_name>: <attribute2_value>
	 * ...
	 */
	@Override
	public String toString(){
		String s = "Cart";
		s += "\njava.util.Set<CartItem_> items: " + getItems();
		s += "\nString userID: " + getUserID();
		s += "\nBigDecimal totalPrice: " + getTotalPrice();
		return s;
	}
}
