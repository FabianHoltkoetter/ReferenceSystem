package edu.hm.ba.kongo.shop.shoppingcart.guilib.gen.services.model;

import de.muenchen.vaadin.guilib.util.Datastore;
import com.vaadin.data.util.BeanItemContainer;
import edu.hm.ba.kongo.shop.shoppingcart.client.local.Cart_;
import java.util.Optional;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple Model for the Cart_ in the GUI.
 */
public class Cart_Datastore implements Datastore<Cart_>{
    
    /** A List of all the Cart_, possible reduced by the query. */
    private final BeanItemContainer<Cart_> carts = new BeanItemContainer<>(Cart_.class);
    
    /** The current (single or none) selected cart in the GUI. */
    private Optional<Cart_> selectedCart= Optional.empty();
    
    /** The query to filter the cart. */
    private Optional<String> query = Optional.empty();

    public Optional<Cart_> getSelectedCart() {
        return selectedCart;
    }

    /**
     * Set the Selected Cart, if null the Optional will be empty.
     *
     * @param selectedCart The Cart_ to set as the selected one.
     */
    public void setSelectedCart(Cart_ selectedCart) {
        this.selectedCart = Optional.ofNullable(selectedCart);
    }

    public BeanItemContainer<Cart_> getCarts() {
        return carts;
    }

    public Optional<String> getQuery() {
        return query;
    }

    /**
     * Set the current query.
     *
     * @param query The query.
     */
    public void setQuery(String query) {
        this.query = Optional.ofNullable(query);
    }

	@Override
	public BeanItemContainer<Cart_> getEntityContainer() {
		return getCarts();
	}
}

