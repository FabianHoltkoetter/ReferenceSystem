package edu.hm.ba.kongo.shop.ordering.guilib.gen.ui.components.entity.order;

import de.muenchen.eventbus.selector.entity.ResponseEntityKey;
import edu.hm.ba.kongo.shop.ordering.guilib.gen.ui.components.buttons.listener.order.Order_SingleActions;
import edu.hm.ba.kongo.shop.ordering.guilib.gen.services.model.Order_Datastore;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple {@link Order_Form} that always shows the {@link Order_Datastore#getSelectedOrder()}.
 */
public class Order_SelectedForm extends Order_Form {

    /**
     * Creates a new Order_Form that updates its Order_ to the {@link Order_Datastore#getSelectedOrder()}
     * from the Eventbus.
     */
    public Order_SelectedForm() {
        getEventBus().on(new ResponseEntityKey(Order_Form.ENTITY_CLASS).toSelector(), this::update);
    }
    
    public void reLoad() {
        final Order_SingleActions singleActions = new Order_SingleActions(this::getOrder);
        singleActions.reRead(null);
    }

    /**
     * Update the Order_ of this Form to the selected one form the DataStore.
     *
     * @param event
     */
    protected void update(reactor.bus.Event<?> event) {
        final Order_Datastore data = (Order_Datastore) event.getData();
        if(data.getSelectedOrder().isPresent()){
        	Order_ order = data.getSelectedOrder().get();
			setOrder(order);
		}
    }
}
