package edu.hm.ba.kongo.shop.ordering.guilib.gen.services.model;

import de.muenchen.vaadin.guilib.util.Datastore;
import com.vaadin.data.util.BeanItemContainer;

import java.util.Optional;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple Model for the Order_ in the GUI.
 */
public class Order_Datastore implements Datastore<Order_>{
    
    /** A List of all the Order_, possible reduced by the query. */
    private final BeanItemContainer<Order_> orders = new BeanItemContainer<>(Order_.class);
    
    /** The current (single or none) selected order in the GUI. */
    private Optional<Order_> selectedOrder= Optional.empty();
    
    /** The query to filter the order. */
    private Optional<String> query = Optional.empty();

    public Optional<Order_> getSelectedOrder() {
        return selectedOrder;
    }

    /**
     * Set the Selected Order, if null the Optional will be empty.
     *
     * @param selectedOrder The Order_ to set as the selected one.
     */
    public void setSelectedOrder(Order_ selectedOrder) {
        this.selectedOrder = Optional.ofNullable(selectedOrder);
    }

    public BeanItemContainer<Order_> getOrders() {
        return orders;
    }

    public Optional<String> getQuery() {
        return query;
    }

    /**
     * Set the current query.
     *
     * @param query The query.
     */
    public void setQuery(String query) {
        this.query = Optional.ofNullable(query);
    }

	@Override
	public BeanItemContainer<Order_> getEntityContainer() {
		return getOrders();
	}
}

