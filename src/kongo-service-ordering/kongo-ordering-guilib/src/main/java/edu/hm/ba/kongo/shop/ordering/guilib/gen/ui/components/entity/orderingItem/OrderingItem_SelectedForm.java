package edu.hm.ba.kongo.shop.ordering.guilib.gen.ui.components.entity.orderingItem;

import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;

import org.springframework.hateoas.Link;

import com.vaadin.data.util.BeanItemContainer;
import de.muenchen.eventbus.selector.entity.ResponseEntityKey;
import edu.hm.ba.kongo.shop.ordering.client.local.OrderingItem_;
import edu.hm.ba.kongo.shop.ordering.guilib.gen.ui.components.buttons.listener.orderingItem.OrderingItem_SingleActions;
import edu.hm.ba.kongo.shop.ordering.guilib.gen.services.model.OrderingItem_Datastore;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple {@link OrderingItem_Form} that always shows the {@link OrderingItem_Datastore#getSelectedOrderingItem()}.
 */
public class OrderingItem_SelectedForm extends OrderingItem_Form {

    /**
     * Creates a new OrderingItem_Form that updates its OrderingItem_ to the {@link OrderingItem_Datastore#getSelectedOrderingItem()}
     * from the Eventbus.
     */
    public OrderingItem_SelectedForm() {
        getEventBus().on(new ResponseEntityKey(OrderingItem_Form.ENTITY_CLASS).toSelector(), this::update);
    }
    
    public void reLoad() {
        final OrderingItem_SingleActions singleActions = new OrderingItem_SingleActions(this::getOrderingItem);
        singleActions.reRead(null);
    }

    /**
     * Update the OrderingItem_ of this Form to the selected one form the DataStore.
     *
     * @param event
     */
    protected void update(reactor.bus.Event<?> event) {
        final OrderingItem_Datastore data = (OrderingItem_Datastore) event.getData();
        if(data.getSelectedOrderingItem().isPresent()){
        	OrderingItem_ orderingItem = data.getSelectedOrderingItem().get();
			setOrderingItem(orderingItem);
		}
    }
}
