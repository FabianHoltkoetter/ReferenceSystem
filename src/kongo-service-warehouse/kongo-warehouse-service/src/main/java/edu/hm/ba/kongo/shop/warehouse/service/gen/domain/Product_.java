package edu.hm.ba.kongo.shop.warehouse.service.gen.domain;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Min;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;	
import java.math.BigDecimal;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Field;
import de.muenchen.service.BaseEntity;
import de.muenchen.service.PetersPerfectBridge;
import de.muenchen.auditing.MUCAudited;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * This class represents a Product_.
 * <p>
 * Only oid and reference will be stored in the database.
 * The entity's content will be loaded according to the reference variable.
 * </p>
 */
@Entity
@Indexed
@Table(name = "Product")
public class Product_ extends BaseEntity {
	
	// ========= //
	// Variables //
	// ========= //
	
	@Column(name="name")
	@Field
	@FieldBridge(impl = PetersPerfectBridge.class)
	@NotNull
	@Size(min=1, max=255)
	private String name;
	
	
	@Column(name="description")
	private String description;
	
	
	@Column(name="price")
	@NotNull
	@DecimalMin("0.0")
	private BigDecimal price;
	
	
	@Column(name="quantity")
	@NotNull
	@Min((long)0.0)
	private long quantity;
	
	
	/**
	 * Default Constructor for Product.
	 */
	public Product_() {}
	
	// =================== //
	// Getters and Setters //
	// =================== //
	public String getName(){
		return name;
	}
	
	public void setName(String name){
		this.name = name;
	}
	
	
	public String getDescription(){
		return description;
	}
	
	public void setDescription(String description){
		this.description = description;
	}
	
	
	public BigDecimal getPrice(){
		return price;
	}
	
	public void setPrice(BigDecimal price){
		this.price = price;
	}
	
	
	public long getQuantity(){
		return quantity;
	}
	
	public void setQuantity(long quantity){
		this.quantity = quantity;
	}
	
	
	@Override
	public boolean equals(Object other) {
		if (other == null)
			return false;
		if (this == other)
			return true;
		if (!(other.getClass() == Product_.class))
			return false;
		if (!super.equals(other))
			return false;
		Product_ product = (Product_) other;
		if (getName() != null ? !getName().equals(product.getName()) : product.getName() != null)
			return false;
		if (getDescription() != null ? !getDescription().equals(product.getDescription()) : product.getDescription() != null)
			return false;
		if (getPrice() != product.getPrice())
			return false;
		if (getQuantity() != product.getQuantity())
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		int result = super.hashCode();
		result = 31 * result + (getName() != null ? getName().hashCode() : 0);
		result = 31 * result + (getDescription() != null ? getDescription().hashCode() : 0);
		result = 31 * result + (getPrice() != null ? getPrice().hashCode() : 0);
		result = 31 * result + (int) (getQuantity() ^ (getQuantity() >>> 32));
		return result;
	}

	/**
	 * Returns a String representation for this Product.
	 * The form is:
	 * <EntityName>
	 * <attribute1_Type> <attribute1_name>: <attribute1_value>
	 * <attribute2_Type> <attribute2_name>: <attribute2_value>
	 * ...
	 */
	@Override
	public String toString(){
		String s = "Product";
		s += "\nString name: " + getName();
		s += "\nString description: " + getDescription();
		s += "\nBigDecimal price: " + getPrice();
		s += "\nlong quantity: " + getQuantity();
		return s;
	}
}
