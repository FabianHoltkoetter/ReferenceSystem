package edu.hm.ba.kongo.shop.warehouse.guilib.gen.services.model;

import de.muenchen.vaadin.guilib.util.Datastore;
import com.vaadin.data.util.BeanItemContainer;
import edu.hm.ba.kongo.shop.warehouse.client.local.Product_;
import java.util.Optional;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple Model for the Product_ in the GUI.
 */
public class Product_Datastore implements Datastore<Product_>{
    
    /** A List of all the Product_, possible reduced by the query. */
    private final BeanItemContainer<Product_> products = new BeanItemContainer<>(Product_.class);
    
    /** The current (single or none) selected product in the GUI. */
    private Optional<Product_> selectedProduct= Optional.empty();
    
    /** The query to filter the product. */
    private Optional<String> query = Optional.empty();

    public Optional<Product_> getSelectedProduct() {
        return selectedProduct;
    }

    /**
     * Set the Selected Product, if null the Optional will be empty.
     *
     * @param selectedProduct The Product_ to set as the selected one.
     */
    public void setSelectedProduct(Product_ selectedProduct) {
        this.selectedProduct = Optional.ofNullable(selectedProduct);
    }

    public BeanItemContainer<Product_> getProducts() {
        return products;
    }

    public Optional<String> getQuery() {
        return query;
    }

    /**
     * Set the current query.
     *
     * @param query The query.
     */
    public void setQuery(String query) {
        this.query = Optional.ofNullable(query);
    }

	@Override
	public BeanItemContainer<Product_> getEntityContainer() {
		return getProducts();
	}
}

